# vim: set sw=2 ts=2 sts=2 et tw=78 foldmarker={{,}} foldlevel=0 foldmethod=marker nospell:

export __SHLIB__=$HOME/.myconfigs/shlib
source "$__SHLIB__/common.sh"

# Setup powerline for zsh prompt
function powerline_precmd() {
  export PS1="$(powerline-shell.py --colorize-hostname $? --shell zsh 2> /dev/null)"
}

function install_powerline_precmd() {
  for s in "${precmd_functions[@]}"; do
    if [ "$s" = "powerline_precmd" ]; then
      return
    fi
  done
  precmd_functions+=(powerline_precmd)
}
install_powerline_precmd

function expand-or-complete-with-dots() {                                       # This bunch of code displays red dots when autocompleting
  echo -n "\e[31m......\e[0m"                                                   # a command with the tab key, "Oh-my-zsh"-style.
  zle expand-or-complete-prefix
  zle redisplay
}

# Set options {{{
setopt auto_cd
setopt auto_pushd
setopt pushd_ignore_dups
# pass through '*' if globbing fails
setopt nonomatch
# setopt always_to_end
# setopt auto_list
# Do not complete alias before completion is finished
# This would allow completion to work for aliases
# e.g. alias tmux=tmux -2
# setopt complete_aliases

# Default on, resulting in a carriage return ^M when enter on the numeric pad is pressed.
setopt no_prompt_cr

setopt append_history
setopt extended_history
setopt hist_expire_dups_first
setopt hist_ignore_dups # ignore duplication command history list
setopt hist_ignore_space
setopt hist_verify
setopt inc_append_history
setopt share_history # share command history data

if [ -z "$HISTFILE" ]; then
    HISTFILE=$HOME/.zsh_history
fi

HISTSIZE=50000
SAVEHIST=10000

# Show history
case $HIST_STAMPS in
  "mm/dd/yyyy") alias history='fc -fl 1' ;;
  "dd.mm.yyyy") alias history='fc -El 1' ;;
  "yyyy-mm-dd") alias history='fc -il 1' ;;
  *) alias history='fc -l 1' ;;
esac

# unsetopt aliases
bindkey -s "OM" ""
unsetopt CORRECT                                                                # Disable autocorrect guesses. Happens when typing a wrong command that may look like an existing one.
setopt CLOBBER
# setopt extended_glob
setopt interactivecomments

setopt hist_no_store
setopt hist_save_no_dups
# }}}

unalias run-help 2>/dev/null
autoload run-help
HELPDIR=$BREWHOME/share/zsh/help

autoload -Uz up-line-or-beginning-search                                         # Put the cursor at the end of line when using Up / Down for command history
zle -N up-line-or-beginning-search
bindkey "^[[A" up-line-or-beginning-search # Up
autoload -Uz down-line-or-beginning-search
zle -N down-line-or-beginning-search
bindkey "^[[B" down-line-or-beginning-search # Down
zle -N expand-or-complete-with-dots

# Key bindings
bindkey "^[OD" beginning-of-line
bindkey "^[OC" end-of-line
# bindkey "^[[3~" delete-char
# bindkey "^I" expand-or-complete-prefix
# By default <C-S> is bind to self-insert, which presents vim from getting the combination.
bindkey -r "^S"
# Let zsh history search use regex pattern
bindkey "^R" history-incremental-pattern-search-backward
bindkey "^[[A" up-line-or-beginning-search # Up
bindkey "^[[B" down-line-or-beginning-search # Down
bindkey "^I" expand-or-complete-with-dots

fpath=($BREWHOME/share/zsh-completions $BREWHOME/share/zsh/site-functions $fpath)

# Additional configurations to load {{{
if [ -e "$HOME/.zshrc.local" ]; then
  source ~/.zshrc.local
fi

# Tmuxinator
if [ -e "$HOME/.tmuxinator.zsh" ]; then
  source ~/.tmuxinator.zsh
fi

autoload -Uz bashcompinit
bashcompinit
autoload -Uz compinit
compinit

if [ -e "/etc/bash_completion.d/g4d" ]; then
  source /etc/bash_completion.d/g4d
fi

# }}}
