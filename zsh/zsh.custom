# vim: set sw=2 ts=2 sts=2 et tw=78 foldmarker={{,}} foldlevel=0 foldmethod=marker nospell:

export __SHLIB__=$(dirname $(dirname $(readlink "$HOME/.zshrc")))/shlib
source "$__SHLIB__/common.sh"

# Enalbe Ctrl-R for revert search in vi mode
bindkey "^R" history-incremental-search-backward

# Put the cursor at the end of line when using Up / Down for command history
autoload -U up-line-or-beginning-search
autoload -U down-line-or-beginning-search
zle -N up-line-or-beginning-search
zle -N down-line-or-beginning-search
bindkey "^[[A" up-line-or-beginning-search # Up
bindkey "^[[B" down-line-or-beginning-search # Down

# Setup powerline for zsh prompt
function powerline_precmd() {
  export PS1="$(powerline-shell.py --colorize-hostname $? --shell zsh 2> /dev/null)"
}

function install_powerline_precmd() {
  for s in "${precmd_functions[@]}"; do
    if [ "$s" = "powerline_precmd" ]; then
      return
    fi
  done
  precmd_functions+=(powerline_precmd)
}

install_powerline_precmd

function _ta() {
  local setenv="/tmp/set-tmux-env.sh"
  echo > "$setenv"
  for var in SSH_OS SSH_CLIENT DISPLAY;
  do
    local value=
    eval value=\$$var
    echo "export $var=\"$value\"" >> "$setenv"
    eval tmux set-environment -t "$1" $var \$var
  done
  for window in $(tmux list-windows -t "$1" -F "#W");
  do
    for pane_id_command in $(tmux list-panes -t "$1:$window" -F "#P:#{pane_current_command}");
    do
      local id=${pane_id_command%%:*}
      local cmd=${pane_id_command##*:}
      if [[ $cmd != "bash" && $cmd != "zsh" && $cmd != "blaze64" ]]; then
        tmux send-keys -t "$1:$window" C-z
        sleep 0.2
        tmux send-keys -t "$1:$window.$id" source \ $setenv ENTER
        sleep 0.2
        tmux send-keys -t "$1:$window.$id" fg ENTER
      else
        tmux send-keys -t "$1:$window.$id" source \ $setenv ENTER
      fi
    done
  done
  tmux attach -t "$1"
}
alias ta=_ta

unalias ll
unalias la
unalias ls

if gls --color -d . &>/dev/null 2>&1
then
  alias ls='gls --color=tty'
elif ls --color -d . &>/dev/null 2>&1
then
  alias ls='ls --color=tty'
else
  alias ls='ls -G'
fi

fpath=($HOME/.zsh-completions/src $fpath)
autoload -U compinit
compinit

# Additional configurations to load {{{

# Tmuxinator
if [ -e "$HOME/.tmuxinator.zsh" ]; then
  source ~/.tmuxinator.zsh
fi

function config_darwin() {
  alias updatedb="sudo /usr/libexec/locate.updatedb"
}

function config_linux() {
  :
}

[[ "$OSTYPE" == "darwin"* ]] && config_darwin
[[ "$OSTYPE" == "linux-gnu"* ]] && config_linux

# }}}
