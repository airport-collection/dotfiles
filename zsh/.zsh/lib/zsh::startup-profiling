# vim: filetype=zsh sw=2 ts=2 sts=2 et tw=80 foldlevel=0 nospell

setopt localoptions KSH_ARRAYS CLOBBER
local _log="/tmp/zsh.profile"
local _profile="/tmp/zsh.profile-summary"
rm "${_log}" "${_profile}" > /dev/null 2>&1
PROFILING='y' zsh
echo "Profile log: ${_log}"
local _file _start _end _curfile _cum _startline _endline
local -a _parts

printf "%-8s : %-10s : %s\n" "time" "cumulative" "file" > "${_profile}"
_cum=0
# _i=0
while read -r _line
do
  # _i=$((_i + 1))
  # if [[ $_i -gt $2 ]]; then
    # break;
  # fi
  if [[ ! ${_line} =~ '^\+' ]]; then
    continue
  fi
  _parts=($=_line)
  _end=${_parts[0]/\+/}
  _curfile="${_parts[1]/:[0-9]*>/}"
  if [[ ! ${_curfile} =~ '^/' ]]; then
    continue
  fi
  if [[ "${_file}" != "${_curfile}" ]]; then
    if [[ "${_end}" =~ '^[0-9][0-9.]*' && ! -z "${_file}" ]]; then
      _cum=$((_cum + _end - _start))
      printf "%-8f : %-10f : %s:%s-%s\n" "$((_end - _start))" "${_cum}" "${_file}" "${_startline/>/}" "${_endline/>/}" >> "${_profile}"
    fi
    _start="${_end}"
    _startline="${_parts[1]/*:/}"
    _endline="${_parts[1]/*:/}"
    _file="${_curfile}"
  else
    _endline="${_parts[1]/*:/}"
  fi
done < "${_log}"
_cum=$((_cum + _end - _start))
printf "%-8f : %-10f : %s:%s-%s\n" "$((_end - _start))" "${_cum}" "${_file}" "${_startline/>/}" "${_endline/>/}" >> "${_profile}"
cat ${_profile}
echo "Profile summary: ${_profile}"
