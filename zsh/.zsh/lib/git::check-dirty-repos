# vim: filetype=zsh sw=2 ts=2 sts=2 et tw=80 foldlevel=0 nospell

: <<=cut
=item Function C<git::check-dirty-repos>

Check subdirs of current directory, and report repos that are dirty
Number of arguments accepted: --no-detached

@return NULLPTR
=cut

setopt localoptions err_return
zparseopts -D -A opts -no-detached "$@"

setopt localoptions nounset
[[ -n ${opts[--no-detached]+1} ]] && \
  io::msg "Considering detached as dirty."
local -a dirty_repos
dirty_repos=()
for dir in */; do
  io::vlog 2 "[${0:t}] Checking ${dir}"
  pushd "${dir}"
  if [[ -d '.git' && (-n $(git status --porcelain) || \
    (-n ${opts[--no-detached]+1} && \
      "$(git status)" =~ '^HEAD detached.*')) ]]; then
    dirty_repos+=${dir}
  fi
  popd
done

if [[ ${#dirty_repos} -gt 0 ]]; then
  io::hl "${#dirty_repos} dirty repo(s) found!"
  for dir in ${dirty_repos}; do
    io::hl "Dirty repo: ${dir}"
  done
else
  io::msg "All clean!"
fi
