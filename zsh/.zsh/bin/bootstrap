#!/usr/bin/env zsh

function bootstrap::usage() {
  cat <<EOF
Usage: bootstrap [arguments]

Arguments:
  -h or --help          Print the usage information
  -n or --dryrun        Dryrun
EOF
  return 1
}
function bootstrap::main() {
  setopt localoptions unset err_return

  io::msg "Installing ${BREWVERSION} dependencies..."
  os::LINUX && shell::eval "sudo apt-get install build-essential curl git m4 \
    ruby texinfo libbz2-dev libcurl4-openssl-dev libexpat-dev libncurses-dev \
    zlib1g-dev trash-cli clipit xclip x11-xkb-utils"

  if [[ ! -d "${BREWHOME}" ]]; then
    io::msg "Cloning ${BREWVERSION}..."
    shell::eval "git clone \"https://github.com/Homebrew/${BREWVERSION}\" \
      \"${BREWHOME}\""
  fi

  shell::eval "brew update && brew upgrade $(brew outdated)"
  shell::eval "brew install coreutils stow"
  io::msg "Creating symlinks with stow..."
  shell::eval "mkdir -p \"$HOME/.antigen/repos/\""
  shell::eval "mkdir -p \"$HOME/.tmux/plugins\""
  shell::eval "mkdir -p \"$HOME/.vim/\""
  shell::eval "[[ ! -d ~/.nvim ]] && ln -s $HOME/.vim $HOME/.nvim"
  for module in misc tmux vim; do
    shell::eval "[[ -d ${module} ]] && stow ${module} -t ~"
  done
  os::OSX && shell::eval "[[ -d ${module} ]] && stow osx -t ~"

  io::msg "Tapping extra repositories..."
  shell::eval "brew tap paulhybryant/myformulae"
  shell::eval "brew tap homebrew/x11"
  shell::eval "brew tap homebrew/dupes"
  shell::eval "brew tap homebrew/completions"
  shell::eval "brew tap iveney/mocha"

  io::msg "Installing softwares..."
  shell::eval "brew install --HEAD paulhybryant/myformulae/powerline-shell \
    paulhybryant/myformulae/zsh-completions"
  shell::eval "brew install --with-gssapi --with-libssh2 --with-rtmpdump curl"
  os::LINUX && shell::eval "brew install --disable-nls --override-system-vi \
    --with-client-server --with-lua --with-luajit --with-gtk+ vim"
  os::OSX && shell::eval "brew install --disable-nls --override-system-vi \
    --with-client-server --with-lua --with-luajit vim"
  shell::eval "brew install brew-gem cmake ctags git htop python python3 \
    the_silver_searcher tmux vimpager zsh netcat dos2unix most stdman assh fasd"
  shell::eval "pip install powerline-status advanced-ssh-config neovim \
    terminatorcli bz2file"
  shell::eval "brew gem install tmuxinator automux pypy pypy3"
  shell::eval "brew install --HEAD vimdoc vroom"
  shell::eval "brew install npm"
  shell::eval "npm install -g urchin"

  os::OSX && io::msg "Installing extra stuff for OSX..." && \
    shell::eval "brew install brew-cask clipper macvim trash lsof \
    reattach-to-user-namespace paulhybryant/myformulae/gnu-getopt"

  io::msg "All done! Sourcing zsh configurations..."
  shell::eval "source ~/.zshrc"
}

setopt LOCAL_OPTIONS
source "${0:a:h}/../lib/base.zsh"
source "${0:a:h}/../lib/io.zsh"
source "${0:a:h}/../lib/os.zsh"
source "${0:a:h}/../lib/shell.zsh"

local -A _fn_options
base::getopt hn help,dryrun "$@"

[[ ! (-z "${_fn_options[--help]}" && -z "${_fn_options[-h]}") ]] && \
  bootstrap::usage
[[ ! (-z "${_fn_options[--dryrun]}" && -z "${_fn_options[-n]}") ]] && \
  mode::set_dryrun

unset _fn_options

local _config_dir
_config_dir="${0:A:h}/../../../"
base::runonce
shell::eval "pushd ${_config_dir:a}"
# bootstrap::main
shell::eval "source ~/.zshrc"
shell::eval "popd"

# vim: filetype=zsh sw=2 ts=2 sts=2 et tw=80 foldlevel=0 nospell
