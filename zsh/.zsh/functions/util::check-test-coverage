# vim: filetype=zsh sw=2 ts=2 sts=2 et tw=80 foldlevel=0 nospell

setopt localoptions err_return nounset
local -a _functions _tests
local -A _test_cases
local _ignore
_ignore=($(cat lib/.ignore | xargs echo))
_ignore=$(strings::join --delim='\|' ${_ignore})
io::vlog 1 "Ignored files: ${_ignore}"
_tests=($(find tests/ -name "*.zsh" | grep -v ${_ignore} | xargs grep -h -o "^function test::.*()" | sed -e 's/^function \(.*\)()/\1/'))
io::vlog 1 "Tests:\n${_tests}"
for t in ${_tests}; do
  io::vlog 1 ${t/test::/}
  _test_cases[${t/test::/}]=$t
done
io::vlog 2 "Testcases:\n${(kv)_test_cases}"

_functions=($(find lib/ -name "*.zsh" | grep -v ${_ignore} | xargs grep -h -o "^function .*()" | sed -e 's/^function \(.*\)()/\1/'))
io::vlog 1 "Functions:\n${_functions}"
for f in ${_functions}; do
  if [[ "$f" =~ '[^:]*::_.*' ]]; then
    io::vlog 2 "Skipping whitelisted function $f"
  elif [[ ${+_test_cases[${f}]} -eq 0 ]]; then
    io::hl "✗ $f"
  else
    io::msg "✓ $f : ${_test_cases[${f}]}"
  fi
done
