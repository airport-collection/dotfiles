# vim: filetype=zsh sw=2 ts=2 sts=2 et tw=80 foldlevel=0 nospell

local setenv=$(mktemp)
: > "$setenv"
for var in SSH_OS SSH_CLIENT DISPLAY;
do
  local value=
  eval value=\$$var
  # local _var_
  # eval "_val_=\"\${$var}\""
  # echo $_val_
  \tmux set-environment $var "$value"
  echo "export $var=\"$value\"" >> "$setenv"
done
for window in $(\tmux list-windows -t "$1" -F "#W");
do
  for pane_id_command in $(\tmux list-panes -t "$1:$window" -F "#P:#{pane_current_command}");
  do
    local id=${pane_id_command%%:*}
    local cmd=${pane_id_command##*:}
    \tmux send-keys -t "$1:$window.$id" C-z
    sleep 0.1
    \tmux send-keys -t "$1:$window.$id" ENTER
    sleep 0.1
    if [[ $cmd != "bash" && $cmd != "zsh" && $cmd != "blaze64" ]]; then
      # run "\\tmux send-keys -t \"$1:$window\" C-z"
      # run "\tmux send-keys -t \"$1:$window.$id\" source \\ $setenv ENTER"
      \tmux send-keys -t "$1:$window.$id" source \ $setenv ENTER
      sleep 0.1
      # run "\\tmux send-keys -t \"$1:$window.$id\" fg ENTER"
      \tmux send-keys -t "$1:$window.$id" fg ENTER
    else
      \tmux send-keys -t "$1:$window.$id" source \ $setenv ENTER
      # run "\\tmux send-keys -t \"$1:$window.$id\" source \\ $setenv ENTER"
    fi
  done
done
\tmux attach -d -t "$1"
