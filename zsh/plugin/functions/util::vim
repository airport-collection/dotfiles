# vim: filetype=zsh sw=2 ts=2 sts=2 et tw=80 foldlevel=0 nospell

: <<=cut
=item Function C<util::vim>

Open files with vim in a single vim instance in one tmux window.

@return NULL
=cut

# setopt localoptions SH_WORD_SPLIT
# Use ${=VAR} for for SH_WORD_SPLIT

zparseopts -D -K -M -E -- s=singleton -singleton=singleton

local -a _servers_list
local _server_name _vim_cmd
_vim_cmd="command vim"

if [[ -z "$TMUX" ]]; then
  DISPLAY=:0 ${=_vim_cmd} --servername "VIM" "$@"
elif [[ -z "${singleton}" ]]; then
  _server_name=$(tmux display-message -p '#{session_id}-#{window_id}-#{pane_id}')
  DISPLAY=:0 ${=_vim_cmd} --servername "${_server_name}" "$@"
else
  _servers_list=($(${=_vim_cmd} --serverlist))
  io::vlog 1 "Vim servers: ${_servers_list}"
  _server_name=$(tmux display-message -p '#S-#W')
  # Convert to upper case
  _server_name=${_server_name:u}
  io::vlog 1 "Vim server name to use: ${_server_name}"
  local _server_exists
  for server in ${_servers_list}; do
    io::vlog 1 "Found vim server: ${server}"
    if [[ "${_server_name}" == "${server}" ]]; then
      _server_exists='yes'
      break
    fi
  done
  if [[ -z "${_server_exists}" ]]; then
    io::vlog 1 "Starting vim with server name: ${_server_name}"
    ${=_vim_cmd} --servername "${_server_name}" "$@"
  else
    io::vlog 1 "Connecting to vim server: ${_server_name}"
    ${=_vim_cmd} --servername ${_server_name} --remote "$@"
  fi
fi
