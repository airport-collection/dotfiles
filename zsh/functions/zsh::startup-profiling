# vim: filetype=zsh sw=2 ts=2 sts=2 et tw=80 foldlevel=0 nospell

setopt localoptions CLOBBER
local _log="$(mktemp)"
local _summary="$(mktemp)"
PROFILING="${_log}" zsh

local _file _start _end _curfile _cum _startline _endline
local -a _parts

printf "%-8s : %-10s : %s\n" "time" "cumulative" "file" > "${_summary}"
_cum=0
# _i=0
while read -r _line
do
  # _i=$((_i + 1))
  # if [[ $_i -gt $2 ]]; then
    # break;
  # fi
  if [[ ! ${_line} =~ '^\+' ]]; then
    continue
  fi
  _parts=($=_line)
  _end=${_parts[1]/\+/}
  _curfile="${_parts[2]/:[0-9]*>/}"
  if [[ ! ${_curfile} =~ '^/' ]]; then
    continue
  fi
  if [[ "${_file}" != "${_curfile}" ]]; then
    if [[ "${_end}" =~ '^[0-9][0-9.]*' && ! -z "${_file}" ]]; then
      _cum=$((_cum + _end - _start))
      printf "%-8f : %-10f : %s:%s-%s\n" "$((_end - _start))" "${_cum}" "${_file}" "${_startline/>/}" "${_endline/>/}" >> "${_summary}"
    fi
    _start="${_end}"
    _startline="${_parts[2]/*:/}"
    _endline="${_parts[2]/*:/}"
    _file="${_curfile}"
  else
    _endline="${_parts[2]/*:/}"
  fi
done < "${_log}"
_cum=$((_cum + _end - _start))
printf "%-8f : %-10f : %s:%s-%s\n" "$((_end - _start))" "${_cum}" "${_file}" "${_startline/>/}" "${_endline/>/}" >> "${_summary}"

printf "Files taking more than 0.01 second to load:\n"
cat "${_summary}" | awk::filter -c '$1 > 0.01' -d ':'
printf "Total load time: %s\n" $(tail -n 1 "${_summary}" | cut -d':' -f2)

printf "Profile log: %s\n" "${_log}"
printf "Profile summary: %s\n" "${_summary}"
