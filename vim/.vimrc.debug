" vim: set sw=2 ts=2 sts=2 et tw=78 foldmarker={{,}} foldlevel=0 foldmethod=marker filetype=vim nospell:

" Environment {{

  set nocompatible                                    " Must be first line
  scriptencoding utf-8                                " Character encoding used in this script

" }}

" Plugins {{
  let g:mapleader = ','
  let g:maplocalleader = ',,'

  filetype on
  filetype off
  set runtimepath+=$HOME/.vim/bundle/neobundle.vim/
  call neobundle#begin()

  NeoBundleFetch 'Shougo/neobundle.vim'                                   " Plugin manager

  NeoBundle 'paulhybryant/ReloadScript', {'type__protocol' : 'ssh'}       " Reload vim script without having to restart vim
  map <leader>rl :ReloadScript %:p<CR>

  NeoBundle 'paulhybryant/Decho.vim', {'type__protocol' : 'ssh'}          " Debug echo for debuging vim plugins
  let g:dechofuncname = 1
  let g:decho_winheight = 10

  NeoBundle 'flazz/vim-colorschemes'                                      " Collection of vim colorschemes
  NeoBundle 'altercation/vim-colors-solarized'                            " Vim colorscheme solarized

  if has('python')
    let g:statusline_use_airline = 1
    if g:statusline_use_airline
      NeoBundle 'bling/vim-airline'
      let g:airline#extensions#tabline#enabled = 1
      let g:airline#extensions#tmuxline#enabled = 0                       " Disable this for plugin Tmuxline
      let g:airline#extensions#tabline#left_sep = ''
      let g:airline#extensions#tabline#left_alt_sep = ''
      let g:airline#extensions#tabline#buffer_idx_mode = 1
    else
      NeoBundle 'Lokaltog/powerline', {'rtp':'/powerline/bindings/vim'}
    endif
  endif

  call neobundle#end()

" }}

" General {{

  filetype plugin indent on                                               " Automatically detect file types.
  syntax on                                                               " Syntax highlighting
  set background=dark                                                     " Assume a dark background
  set cursorline                                                          " Highlight current line
  set encoding=utf-8                                                      " Set text encoding default to utf-8
  set hidden                                                              " Allow buffer switching without saving
  set hlsearch                                                            " Highlight search terms
  set ignorecase                                                          " Case insensitive search
  set incsearch                                                           " Find as you type search
  set laststatus=2                                                        " Always show statusline
  set linespace=0                                                         " No extra spaces between rows
  set modeline                                                            " Mac disables modeline by default
  set modelines=4                                                         " Mac sets it to 0 by default
  set mouse=a                                                             " Automatically enable mouse usage
  set mousehide                                                           " Hide the mouse cursor while typing
  set number                                                              " Line numbers on
  set ruler                                                               " Show the ruler
  set rulerformat=%30(%=\:b%n%y%m%r%w\ %l,%c%V\ %P%)                      " A ruler on steroids
  set shiftround                                                          " Round indent to multiple of shiftwidth
  set shiftwidth=2                                                        " Use indents of 2 spaces
  set shortmess+=filmnrxoOtT                                              " Abbrev. of messages (avoids 'hit enter')
  set showcmd                                                             " Show partial commands in status line and selected text in visual mode
  set showmatch                                                           " Show matching brackets/parenthesis
  set showmode                                                            " Display the current mode
  set showtabline=2                                                       " Always show the tabline
  set smartcase                                                           " Case sensitive when uppercase present
  set softtabstop=2                                                       " Let backspace delete indent
  set t_Co=256                                                            " Set number of colors supported by term
  set tabstop=2                                                           " An indentation every two columns
  set term=$TERM                                                          " Make arrow and other keys work
  set wildmenu                                                            " Show list instead of just completing
  set wildmode=list:longest,full                                          " Command <Tab> completion, list matches, then longest common part, then all
  set winminheight=0                                                      " Windows can be 0 line high

  " Has to be after syntax on for colorscheme to work
  let g:solarized_termcolors=256
  if has('gui_running')
    set background=light
    colorscheme solarized
  else
    colorscheme putty
  endif

" }}
