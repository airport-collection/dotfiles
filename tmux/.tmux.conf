# vim: set sw=4 ts=4 sts=4 et tw=80 foldmarker={{,}} foldlevel=0 foldmethod=marker filetype=tmux nospell:

# Reset tmux keys to default (generated from tmux list-keys with no config loaded)
source-file ~/.tmux-default.conf

# Plugins {{

    # List of plugins, supports `github_username/repo` or full git URLs
    # The plugin 'tpm' must be the first one.
    set -g @tpm_plugins "                   \
        tmux-plugins/tpm                    \
        tmux-plugins/tmux-battery           \
        tmux-plugins/tmux-copycat           \
        tmux-plugins/tmux-logging           \
        tmux-plugins/tmux-online-status     \
        tmux-plugins/tmux-open              \
        tmux-plugins/tmux-resurrect         \
        tmux-plugins/tmux-sensible          \
        tmux-plugins/tmux-yank              \
        "
    set-option -g @resurrect-processes 'ssh "git log" grunt-wrapper tail'
    # Other examples:
    # github_username/plugin_name    \
    # git@github.com/user/plugin     \
    # git@bitbucket.com/user/plugin  \

    run-shell ~/.tmux/plugins/tpm/tpm                                               # initializes TMUX plugin manager

# }}

# Options {{

    # General {{
        # If you alias your tmux to TERM=xterm-256color tmux -2, the following setting will be overriden.
        # set-option -w is equivalent to set-window-option

        unbind C-b                                                                  # GNU-Screen compatible prefix
        set-option -g prefix C-a
        bind-key C-a send-prefix
        set-option -g default-shell '/usr/bin/zsh'
        set-option -g default-terminal "screen-256color-bce"                        # HOME and END key will have different keycode if this is not set
        set-option -g aggressive-resize on                                          # Resize pane when connected from different resolution
        set-option -g mode-keys vi                                                  # Use vi style key bindings
        set-option -g mode-mouse on                                                 # Allow selecting pane with mouse
        set-option -g status-keys vi                                                # Force vi-style key bindings
        set-option -g terminal-overrides 'screen*:XT:smcup@:rmcup@'                 # Allow terminal to use its own scrolling, 'XT' is important here
        set-option -g wrap-search on
        set-option -ga update-environment ' SSH_CLIENT SSH_OS'                      # Inherit the env variable SSH_CLIENT, in addition to the defaults (note -a)
        set-option -s quiet on                                                      # disable various messages (-s means server options)
        set-option -sg repeat-time 0
        set-option -sg escape-time 1
    # }}

    # Display {{
        set-option -g base-index 1                                                  # start windows numbering at 1
        set-option -g display-panes-time 800                                        # slightly longer pane indicators display time
        set-option -g monitor-activity on
        set-option -g renumber-windows on                                           # renumber windows when a window is closed
        set-option -g set-titles on                                                 # set terminal title
        set-option -g set-titles-string '#S - #W - #{pane_current_command}'         # format for setting terminal title
        set-option -g visual-activity off
        # set-option -g set-titles-string '#h ❐ #S ● #I #W'                         # format for setting terminal title
        set-window-option -g automatic-rename off                                   # don't rename window to reflect current program
        set-window-option -g clock-mode-style 24                                    # 24 hour clock
        set-window-option -g pane-base-index 1                                      # make pane numbering consistent with windows
        set-window-option -g mode-mouse on
        set-window-option -g xterm-keys on
    # }}

    source-file ~/.tmux.conf.local

# }}

# Key bindings {{

    # General {{
        # Create a new window to edit the tmux configuration.
        bind-key e new-window -n '~/.tmux.conf' '${EDITOR:-vim} ~/.tmux.conf && tmux source ~/.tmux.conf && tmux display "~/.tmux.conf sourced"'
        bind-key r source-file ~/.tmux.conf \; display '~/.tmux.conf sourced'
        bind-key n command-prompt 'rename-session %%'
        bind-key i command-prompt -p 'Insert window at:' 'new-window -a -t %1; swap-window -t -1'
        bind-key m command-prompt -p 'Move this window to:' 'swap-window -t %1'
        bind-key C-w resize-pane -Z
        bind-key C-o show-options -g
    # }}

    # Navigation {{
        bind-key - split-window -v -c "#{pane_current_path}"                        # split current window horizontally
        bind-key \ split-window -h -c "#{pane_current_path}"                        # split current window vertically
        # Smart pane switching with awareness of vim splits
        bind-key -n -r C-h run "(tmux display-message -p '#{pane_current_command}' | grep -iqE '(^|\/)g?(view|n?vim?)(diff)?$' && tmux send-keys C-h) || ([[ $(tmux list-panes | wc -l) -eq 1 ]] || tmux select-pane -L)"
        bind-key -n -r C-j run "(tmux display-message -p '#{pane_current_command}' | grep -iqE '(^|\/)g?(view|n?vim?)(diff)?$' && tmux send-keys C-j) || ([[ $(tmux list-panes | wc -l) -eq 1 ]] || tmux select-pane -D)"
        bind-key -n -r C-k run "(tmux display-message -p '#{pane_current_command}' | grep -iqE '(^|\/)g?(view|n?vim?)(diff)?$' && tmux send-keys C-k) || ([[ $(tmux list-panes | wc -l) -eq 1 ]] || tmux select-pane -U)"
        bind-key -n -r C-l run "(tmux display-message -p '#{pane_current_command}' | grep -iqE '(^|\/)g?(view|n?vim?)(diff)?$' && tmux send-keys C-l) || ([[ $(tmux list-panes | wc -l) -eq 1 ]] || tmux select-pane -R)"
        bind-key -n -r C-Down resize-pane -D 2
        bind-key -n -r C-Left resize-pane -L 2
        bind-key -n -r C-Right resize-pane -R 2
        bind-key -n -r C-Up resize-pane -U 2
        bind-key -n M-Right next-window
        # bind-key -n M-Right select-window -t :.+
        bind-key -n M-Left previous-window
        # bind-key -n M-Right select-window -t :.-
        # bind-key BTab select-pane -t :.-
        # bind-key Tab select-pane -t :.+

        # bind-key -n -r C-S-1 select-window -t 1
        # bind-key -n -r C-S-2 select-window -t 2
        # bind-key -n -r C-S-3 select-window -t 3
        # bind-key -n -r C-S-4 select-window -t 4
        # bind-key -n -r C-S-5 select-window -t 5
        # bind-key -n -r C-S-6 select-window -t 6
        # bind-key -n -r C-S-7 select-window -t 7
        # bind-key -n -r C-S-8 select-window -t 8
        # bind-key -n -r C-S-9 select-window -t 9
    # }}

    # Copy Mode {{
        bind-key -t vi-copy C-d page-down
        bind-key -t vi-copy C-u page-up
        # bind-key -t vi-copy Escape cancel
        bind-key -t vi-copy v begin-selection
        # copy to Mac OSX pasteboard
        if 'which -s reattach-to-user-namespace' 'bind-key -t vi-copy y copy-pipe "tmux save-buffer - | reattach-to-user-namespace pbcopy"'
        if 'which -s reattach-to-user-namespace' 'bind-key -t vi-copy t copy-pipe "tr -d \'\n\' | tmux save-buffer - | reattach-to-user-namespace pbcopy"'
        if 'which -s xclip' 'bind-key -t vi-copy y copy-pipe "tr -d \'\n\' | xclip -selection clipboard -i"'
        if 'which -s xclip' 'bind-key -t vi-copy t copy-pipe "xclip -selection clipboard -i"'
        bind-key Enter copy-mode                                                    # enter copy mode
        bind-key P choose-buffer                                                    # choose which buffer to paste from
        bind-key b list-buffers                                                     # list paster buffers
        bind-key p paste-buffer                                                     # paste from the top paste buffer
        bind-key / list-keys -t vi-copy
    # }}

    source-file ~/.tmux.extra.conf
# }}

    # Restore tmux sessions on server start if sessions are saved before.
    # Do not restore if tmux server is already running. This happens when the
    # file is explicitly sourced.
    if 'test -e $HOME/.tmux_restore' 'run-shell "$HOME/.tmux/plugins/tmux-resurrect/scripts/restore.sh"'

# Unused {{

    # bind-key -t vi-copy "'" jump-again
    # bind-key -t vi-copy "End" end-of-line
    # bind-key -t vi-copy "Home" start-of-line
    # bind-key -t vi-copy "M-'" end-of-line
    # bind-key -t vi-copy "M-\\;" back-to-indentation
    # bind-key -t vi-copy '\;' jump-reverse
    # bind-key < swap-pane -U       # swap current pane with the previous one
    # bind-key > swap-pane -D       # swap current pane with the next one
    # # C-c: save into system clipboard (+). With preselection.
    # bind-key C-c choose-buffer "run \"tmux save-buffer -b %% - | xclip -i -sel clipboard\" \; run \" tmux display \\\"Clipboard \(+\) filled with: $(tmux save-buffer -b %1 - | dd ibs=1 obs=1 status=noxfer count=80 2> /dev/null)... \\\" \" "
    # # C-d: save into selection clipboard (*). With preselection.
    # bind-key C-d choose-buffer "run \"tmux save-buffer -b %% - | xclip -i\" \; run \" tmux display \\\"Clipboard \(*\) filled with: $(tmux save-buffer -b %1 - | dd ibs=1 obs=1 status=noxfer count=80 2> /dev/null)... \\\" \" "
    # # C-v: copy from + clipboard.
    # bind-key C-v run "tmux set-buffer \"$(xclip -o -sel clipboard)\"; tmux paste-buffer" \; run "tmux display \"Copied from \(+\) $(xclip -o -sel clipboard | dd ibs=1 obs=1 status=noxfer count=80 2> /dev/null)... \""
    # # C-f: copy from * clipboard.
    # bind-key C-f run "tmux set-buffer \"$(xclip -o)\"; tmux paste-buffer" \; run "tmux display \"Copied from \(*\) $(xclip -o | dd ibs=1 obs=1 status=noxfer count=80 2> /dev/null)... \""
    # set-option -g set-clipboard off
    # bind-key C-f command-prompt -p find-session 'switch-client -t %%'     # find session
    # unbind -t vi-copy '\;'

# }}

# run 'cut -c3- ~/.tmux.extra.conf | sh -s apply_theme $tmux_conf_theme'
# run 'for name in $(printenv | grep -Eo ^tmux_conf_[^=]+); do tmux setenv -gu $name; done;'
