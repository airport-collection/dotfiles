# vim: ft=tmux sw=4 ts=4 sts=4 et tw=80 fdl=0 fdm=marker nospell:

unbind-key -a
source-file ~/.tmux/.tmux-default-keybindings.conf                              # Reset tmux keys to default $(tmux -f /dev/null -L temp start-server \; list-keys)
# Plugins {{{1
    # Install tpm if it is not installed yet.
    if-shell '! test -e ~/.tmux/plugins/tpm/tpm' \
        'run-shell "git clone https://github.com/tmux-plugins/tpm ~/.tmux/plugins/tpm"'

    # set-option -g @plugin 'jooize/tmux-powerline-theme'
    # set-environment -g TMUX_POWERLINE_SYMBOLS "powerline"

    set-option -g @plugin 'nhdaly/tmux-better-mouse-mode'
    set-option -g @plugin 'tmux-plugins/tmux-battery'
    set-option -g @plugin 'tmux-plugins/tmux-continuum'
    set-option -g @plugin 'tmux-plugins/tmux-copycat'
    set-option -g @plugin 'tmux-plugins/tmux-logging'
    set-option -g @plugin 'tmux-plugins/tmux-net-speed'
    set-option -g @plugin 'tmux-plugins/tmux-online-status'
    set-option -g @plugin 'tmux-plugins/tmux-open'
    set-option -g @plugin 'tmux-plugins/tmux-prefix-highlight'
    set-option -g @plugin 'tmux-plugins/tmux-resurrect'
    set-option -g @plugin 'tmux-plugins/tmux-sensible'
    set-option -g @plugin 'tmux-plugins/tmux-test'
    set-option -g @plugin 'tmux-plugins/tmux-urlview'
    set-option -g @plugin 'tmux-plugins/tmux-yank'
    set-option -g @plugin 'tmux-plugins/tpm'

    # set-option -g @plugin 'seebi/tmux-colors-solarized'
    # set-option -g @colors-solarized 'dark'

    # Other plugins not installed, source: https://github.com/tmux-plugins

    set-option -g @continuum-restore 'on'
    set-option -g @prefix_highlight_bg 'colour148'                              # default is 'colour04'
    set-option -g @prefix_highlight_fg 'colour22'                               # default is 'colour231'
    set-option -g @prefix_highlight_show_copy_mode 'on'
    set-option -g @resurrect-processes 'ssh "git log" grunt-wrapper tail'
    set-option -g @urlview-key 'u'
    set-option -g @yank_selection 'primary'

    run-shell ~/.tmux/plugins/tpm/tpm                                          # initializes TMUX plugin manager
# }}}
# Options {{{1
    # Server options
    set-option -sg default-terminal "xterm-256color"                            # HOME and END key will have different keycode if this is not set
    set-option -sg escape-time 1
    set-option -sg exit-unattached off                                          # Exit the server if there is no attached client
    set-option -sg focus-events on
    set-option -sg set-clipboard on
    set-option -sg terminal-overrides 'screen*:XT:smcup@:rmcup@'                # Allow terminal to use its own scrolling, 'XT' is important here

    # Session options
    set-option -g base-index 1                                                  # start windows numbering at 1
    if-shell 'which -s reattach-to-user-namespace' \
        'set-option -g default-command "reattach-to-user-namespace \
            -l /usr/bin/env zsh"' \
        'set-option -g default-command "/usr/bin/env zsh"'
    # set-option -g default-shell '/usr/bin/zsh'
    set-option -g destroy-unattached off
    set-option -g detach-on-destroy on
    set-option -g display-panes-time 1000                                       # slightly longer pane indicators display time
    # When this is on, somehow mouse cannot be used in konsole
    # set-option -g mouse on                                                      # Allow using mouse
    set-option -g prefix C-a
    set-option -g renumber-windows on                                           # renumber windows when a window is closed
    set-option -g repeat-time 0
    set-option -g set-titles on                                                 # set terminal title
    set-option -g set-titles-string '#S - #W - #{pane_current_command}'         # format for setting terminal title
    set-option -g status-keys vi                                                # Force vi-style key bindings
    set-option -ga update-environment \
        ' SSH_OS SSH_CLIENT SSH_CONNECTION SSH_AUTH_SOCK SSH_AGENT_PID'        # Inherit the additional env variables, in addition to the defaults (note -a)
    set-option -g visual-activity off

    # Window options
    set-option -wg aggressive-resize on                                         # Resize pane when connected from different resolution
    set-option -wg automatic-rename off                                         # don't rename window to reflect current program
    set-option -wg clock-mode-style 24                                          # 24 hour clock
    set-option -wg mode-keys vi                                                 # Use vi style key bindings
    set-option -wg monitor-activity on
    set-option -wg pane-base-index 1                                            # make pane numbering consistent with windows
    set-option -wg wrap-search on
    set-option -wg xterm-keys on
# }}}
# Key bindings {{{1
    # General {{{2
        unbind-key C-b                                                          # GNU-Screen compatible prefix
        bind-key C-a send-prefix
        # bind-key -n C-g send-prefix                                             # Used to send prefix to nested tmux sessions
        bind-key e new-window -n '~/.tmux.conf' \
            '${EDITOR:-vim} ~/.tmux.conf && tmux source ~/.tmux.conf && \
                tmux display "~/.tmux.conf sourced"'
        bind-key r source-file ~/.tmux.conf \; display '~/.tmux.conf sourced'
        bind-key n command-prompt 'rename-session %%'
        bind-key i command-prompt -p 'Insert window at:' \
            'new-window -a -t %1; swap-window -t -1'
        bind-key m command-prompt -p 'Move this window to:' 'swap-window -t %1'
        bind-key c new-window -c "#{pane_current_path}"
        bind-key < swap-window -t :-1                                           # swap current pane with the previous one
        bind-key > swap-window -t :+1                                           # swap current pane with the next one
        bind-key C-w resize-pane -Z
        bind-key C-o show-options -g
    # }}}
    # Navigation {{{2
        bind-key - split-window -v -c "#{pane_current_path}"                    # split current window horizontally
        bind-key \ split-window -h -c "#{pane_current_path}"                    # split current window vertically
        # Smart pane switching with awareness of vim splits
        # bind-key -n -r C-h run-shell "(tmux display-message -p '#{pane_current_command}' | grep -iqE '(^|\/)g?(view|n?vim?)(diff)?$' && tmux send-keys C-h) || (([[ $(tmux list-panes | wc -l) -eq 1 ]] && tmux previous-window) || tmux select-pane -L)"
        # bind-key -n -r C-l run-shell "(tmux display-message -p '#{pane_current_command}' | grep -iqE '(^|\/)g?(view|n?vim?)(diff)?$' && tmux send-keys C-l) || (([[ $(tmux list-panes | wc -l) -eq 1 ]] && tmux next-window) || tmux select-pane -R)"
        bind-key -n -r C-h run-shell "(tmux display-message -p \
            '#{pane_current_command}' | \
            grep -iqE '(^|\/)g?(view|n?vim?)(diff)?$' && \
            tmux send-keys C-h) || tmux select-pane -L"
        bind-key -n -r C-j run-shell "(tmux display-message -p \
            '#{pane_current_command}' | \
            grep -iqE '(^|\/)g?(view|n?vim?)(diff)?$' && \
            tmux send-keys C-j) || tmux select-pane -D"
        bind-key -n -r C-k run-shell "(tmux display-message -p \
            '#{pane_current_command}' | \
            grep -iqE '(^|\/)g?(view|n?vim?)(diff)?$' && \
            tmux send-keys C-k) || tmux select-pane -U"
        bind-key -n -r C-l run-shell "(tmux display-message -p \
            '#{pane_current_command}' | \
            grep -iqE '(^|\/)g?(view|n?vim?)(diff)?$' && \
            tmux send-keys C-l) || tmux select-pane -R"
        bind-key -r h select-pane -L
        bind-key -r j select-pane -D
        bind-key -r k select-pane -U
        bind-key -r l select-pane -R
        bind-key -n M-l next-window
        bind-key -n M-h previous-window
        # bind-key -n M-Right select-window -t :.+
        # bind-key -n M-Left select-window -t :.-
        # bind-key BTab select-pane -t :.-
        # bind-key -n -r M-1 select-window -t :1

        bind-key -n -r M-1 run-shell "(tmux display-message -p \
            '#{pane_current_command}' | \
            grep -iqE '(^|\/)g?(view|n?vim?)(diff)?$' \
            && tmux send-keys M-1) || tmux select-window -t :1"
        bind-key -n -r M-2 run-shell "(tmux display-message -p \
            '#{pane_current_command}' | \
            grep -iqE '(^|\/)g?(view|n?vim?)(diff)?$' \
            && tmux send-keys M-2) || tmux select-window -t :2"
        bind-key -n -r M-3 run-shell "(tmux display-message -p \
            '#{pane_current_command}' | \
            grep -iqE '(^|\/)g?(view|n?vim?)(diff)?$' \
            && tmux send-keys M-3) || tmux select-window -t :3"
        bind-key -n -r M-4 run-shell "(tmux display-message -p \
            '#{pane_current_command}' | \
            grep -iqE '(^|\/)g?(view|n?vim?)(diff)?$' \
            && tmux send-keys M-4) || tmux select-window -t :4"
        bind-key -n -r M-5 run-shell "(tmux display-message -p \
            '#{pane_current_command}' | \
            grep -iqE '(^|\/)g?(view|n?vim?)(diff)?$' \
            && tmux send-keys M-5) || tmux select-window -t :5"
        bind-key -n -r M-6 run-shell "(tmux display-message -p \
            '#{pane_current_command}' | \
            grep -iqE '(^|\/)g?(view|n?vim?)(diff)?$' \
            && tmux send-keys M-6) || tmux select-window -t :6"
        bind-key -n -r M-7 run-shell "(tmux display-message -p \
            '#{pane_current_command}' | \
            grep -iqE '(^|\/)g?(view|n?vim?)(diff)?$' \
            && tmux send-keys M-7) || tmux select-window -t :7"
        bind-key -n -r M-8 run-shell "(tmux display-message -p \
            '#{pane_current_command}' | \
            grep -iqE '(^|\/)g?(view|n?vim?)(diff)?$' \
            && tmux send-keys M-8) || tmux select-window -t :8"
        bind-key -n -r M-9 run-shell "(tmux display-message -p \
            '#{pane_current_command}' | \
            grep -iqE '(^|\/)g?(view|n?vim?)(diff)?$' \
            && tmux send-keys M-9) || tmux select-window -t :9"

        # make scrolling with wheels work
        # bind-key -n WheelUpPane if -F -t = "#{mouse_any_flag}" "send-keys -M" "if -Ft= '#{pane_in_mode}' 'send-keys -M' 'select-pane -t=; copy-mode -e; send-keys -M'"
        # bind-key -n WheelDownPane select-pane -t= \; send-keys -M
    # }}}
    # Copy Mode {{{2
        bind-key -T copy-mode-vi C-d send-keys -X page-down
        bind-key -T copy-mode-vi C-u send-keys -X page-up
        bind-key -T copy-mode-vi Escape send-keys -X cancel
        bind-key -T copy-mode-vi v send-keys -X begin-selection
        # bind-key -T copy-mode-vi y send-keys -X copy-pipe \
            # "tmux save-buffer - | xclipper -selection clipboard -i"
        # bind-key -T copy-mode-vi Y send-keys -X copy-pipe \
            # "save2tmp --cb='tmux set-buffer'; \
            # tmux show-buffer | xclipper -selection clipboard -i"

        # transfer copied text to attached terminal with yank:
        # https://github.com/sunaku/home/blob/master/bin/yank
        bind-key -T copy-mode-vi y send-keys -X copy-pipe 'yank > #{pane_tty}'

        # transfer copied text to attached terminal with yank:
        # https://github.com/sunaku/home/blob/master/bin/yank
        bind-key -n M-y run-shell 'tmux save-buffer - | yank > #{pane_tty}'

        # transfer previously copied text (chosen from a menu) to attached terminal:
        # https://github.com/sunaku/home/blob/master/bin/yank
        bind-key -n M-Y choose-buffer 'run-shell "tmux save-buffer -b \"%%\" - | yank > #{pane_tty}"'

        bind-key Enter copy-mode                                                # enter copy mode
        bind-key P choose-buffer                                                # choose which buffer to paste from
        bind-key b list-buffers                                                 # list paster buffers
        bind-key p paste-buffer                                                 # paste from the top paste buffer
        bind-key -T copy-mode-vi / list-keys
    # }}}
# }}}

source-file ~/.tmux/.tmux-statusline-colors.conf
# source-file $BREWHOME/lib/python2.7/site-packages/powerline/bindings/tmux/powerline.conf
# source-file $BREWHOME/lib/python2.7/site-packages/powerline/bindings/tmux/powerline_tmux_1.9_plus.conf
# if-shell 'tmux list-sessions | wc -l' \
    # 'run-shell $HOME/.tmux/plugins/tmux-resurrect/scripts/restore.sh'
if-shell 'pgrep -f powerline-daemon >/dev/null 2>&1' '' \
    'run-shell "powerline-daemon -q"'
run-shell ~/.tmux/plugins/tmux-better-mouse-mode/scroll_copy_mode.tmux
run-shell ~/.tmux/plugins/tmux-prefix-highlight/prefix_highlight.tmux
# run-shell ~/.tmux/plugins/tmux-net-speed/net_speed.tmux
